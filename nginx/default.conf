# /nginx/default.conf
# 초기 Nginx 설정 파일입니다. Certbot (nginx 플러그인 사용 시)이 이 파일을 수정하여 HTTPS를 적용합니다.

server {
    listen 80;
    listen [::]:80;

    # 중요: 아래 server_name을 Certbot으로 인증받을 실제 도메인 이름으로 설정해야 합니다.
    server_name calazure.mooo.com;

    # React 앱의 루트 디렉토리 (Nginx Dockerfile에서 빌드 결과물이 위치하는 경로)
    root /workspace/dist;
    index index.html index.htm;

    # Certbot이 /.well-known/acme-challenge 경로를 사용하여 도메인 소유권을 확인합니다.
    # certbot --nginx 플러그인이 이 부분은 자동으로 처리하거나 적절히 설정합니다.
    location /.well-known/acme-challenge/ {
        # nginx 플러그인은 일반적으로 이 부분을 직접 관리합니다.
        # 만약 webroot 플러그인을 사용한다면, root 지시어를 설정해야 할 수 있습니다.
        # 예: root /var/www/certbot; (그리고 해당 디렉토리 볼륨 마운트 필요)
    }

    location / {
        try_files $uri $uri/ /index.html;
        # Certbot이 HTTPS 설정 후, 이 블록에 HTTP 요청을 HTTPS로 리디렉션하는 코드를 추가합니다.
        # 예: return 301 https://$host$request_uri;
    }

    # FastAPI 서버에 대한 리버스 프록시 설정
    # Certbot이 HTTPS를 설정한 후에도 이 프록시 설정은 유지되어야 하며, HTTPS server 블록으로 옮겨지거나 복사될 수 있습니다.
    location /api/ {
        proxy_pass http://fastapi:20100/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # $scheme은 Certbot에 의해 HTTPS로 설정되면 'https'가 됩니다.
        # 이 부분은 Certbot이 생성하는 HTTPS server 블록 내의 프록시 설정에 포함될 것입니다.
        proxy_set_header X-Forwarded-Proto $scheme; 
        proxy_redirect off;
    }

    # 에러 페이지 설정
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /workspace/dist;
    }
}

# Certbot --nginx 플러그인은 위 server 블록을 수정하거나 새로운 server 블록 (listen 443 ssl...)을 생성하여
# SSL 관련 지시어 (ssl_certificate, ssl_certificate_key 등)를 추가하고,
# HTTP를 HTTPS로 리디렉션하는 로직을 포함시킬 것입니다.
# 따라서 초기 설정에서는 HTTPS 관련 블록을 명시적으로 포함하지 않습니다.

